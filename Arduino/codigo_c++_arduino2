//CODIGO PARA RFID Y CONEXION SERIAL
#include <Wire.h>
#include <SPI.h>
#include <MFRC522.h>
 
#define SS_PIN 10
#define RST_PIN 9
 
MFRC522 rfid(SS_PIN, RST_PIN);
 
void setup() {
  Wire.begin();
  Serial.begin(9600);
  SPI.begin();          // Inicia el bus SPI
  rfid.PCD_Init();      // Inicializa el RFID
}
 
void loop() {
  // Comprueba si hay una tarjeta presente
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
    delay(500); // Evitar múltiples lecturas de la misma tarjeta
    return;
  }
 
  // Leer el UID de la tarjeta
  String codigo = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    codigo += String(rfid.uid.uidByte[i], HEX);
    if (i != rfid.uid.size - 1) codigo += ":"; // Agregar separador
  }
 
  // Convertir el UID a minúsculas para evitar problemas de comparación
  codigo.toLowerCase();
 
  // Enviar mensaje específico según el UID
  String mensaje = "";
  if (codigo == "83:3:7e:c") { // Formato esperado
    Serial.println("Flor Guerra enviado");
    mensaje = "Flor Guerra";
  } else if (codigo == "89:97:3a:a4") {
    Serial.println("Anto Astudillo enviado");
    mensaje = "Anto Astudillo";
  } else {
    if (codigo.length() > 0) {
      Serial.println("UID desconocido, enviando código:" + codigo);
      mensaje = codigo; // Enviar el UID por defecto
    }
  }
 
  if (mensaje.length() > 0) {
    Wire.beginTransmission(8); // Dirección del esclavo (Arduino 2)
    Wire.write(mensaje.c_str()); // Enviar el mensaje
    Wire.endTransmission();
    Serial.println(mensaje);
  }
 
  delay(1000); // Esperar antes de intentar leer otra tarjeta
}
 
 
